import os

configfile: 'config.yaml'

'''Load from config file'''

SAMTOOLS = config['SAMTOOLS']
BCFTOOLS = config['BCFTOOLS']
VCFTOOLS = config['VCFTOOLS']
BEDTOOLS = config['BEDTOOLS']
MACS2 = config['MACS2']

DIR = config['DIR']

FQ_DIR = config['FQ_DIR']
BOWTIE_DIR = config['BOWTIE_DIR']
PEAK_DIR_MACS2 = os.path.join(BOWTIE_DIR, 'Peaks_MACS2')
VCF_DIR = os.path.join(BOWTIE_DIR, 'VCF_files') 
TMP_DIR = config['TMP_DIR']
PICARD = config['PICARD']
CRAMTOOLS = config['CRAMTOOLS']


INDIVS = []
fn = open('records/sample_metadata_noSC.tsv', 'r')
fn.readline()
for line in fn.readlines():
    line = line.rstrip()
    #if 'PAIRED' in line:
    try:
        N = int(line.split('	')[9])
    except:
        N = 100000000
    if N > 10000000:
        INDIVS.append(line.split('	')[3])

INDIVS = INDIVS[1000:1500]

INDIVS_SE = glob_wildcards(os.path.join(PEAK_DIR_MACS2, '{indiv}_peaks.narrowPeak'))
INDIVS_SE = INDIVS_SE[0]
INDIVS_SE = [ id for id in INDIVS_SE if '/' not in id ]

INDIVS = list(set(INDIVS) - set(INDIVS_SE))
INDIVS.sort()
#print(len(INDIVS))


INDIVS_SE = glob_wildcards(os.path.join(FQ_DIR, '{indiv}.fastq.gz'))
INDIVS_SE = INDIVS_SE[0]
INDIVS_SE = [ id for id in INDIVS_SE if '/' not in id ]

INDIVS = list(set(INDIVS) - set(INDIVS_SE))
INDIVS.sort()

print(len(INDIVS))

os.makedirs(FQ_DIR, exist_ok = True)
os.makedirs(os.path.join(FQ_DIR, 'subsampling'), exist_ok = True)
os.makedirs(BOWTIE_DIR, exist_ok = True)
os.makedirs(os.path.join(BOWTIE_DIR, 'subsampling'), exist_ok = True)
os.makedirs(PEAK_DIR_MACS2, exist_ok = True)
os.makedirs(VCF_DIR, exist_ok = True)

# Bowtie 2 genome
BOWTIE_GENOME_INDEX = config['BOWTIE_GENOME_INDEX']
SUFFIX = '.bowtie2.grch38.sortedByCoord.out'


THREADS = config['THREADS']

## These need to after the global variables in order to use them 
include : 'ENA_process.snakefile'
include : 'variant_calling_subsampling.snakefile'

minDP_arr = ['5']
CHROM = config['CHROM']
suffix = 'recode'

''' Snakemake rules '''
rule all:
    input:
        expand(os.path.join(PEAK_DIR_MACS2, '{indiv}' + '_peaks.narrowPeak'), indiv = INDIVS),
        expand(os.path.join(BOWTIE_DIR, '{indiv}' + SUFFIX + '.cram'), indiv = INDIVS),
        expand(os.path.join(VCF_DIR, '{indiv}.octopus.fast.vcf'), indiv = INDIVS),
        #expand(os.path.join(VCF_DIR, 'minDP' + "{minDP}", "dosage_by_sample_matrix_chr{chr}." + suffix + ".txt"), minDP = minDP_arr, chr = CHROM)
